name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }
      JWT_SECRET: ${{ secrets.JWT_SECRET }

    steps:
      - name: display
        run: |
          echo "$JWT_SECRET" |  awk '$1=$1' FS= OFS=" "

          touch .env
          echo JWT_SECRET = $JWT_SECRET >> .env

          cat .env | awk '$1=$1' FS= OFS=" "

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies for backend
        run: yarn install

      - name: Install dependencies for frontend
        run: yarn install
        working-directory: ./frontend

      - name: Start backend
        run: yarn start &
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }} # Set your DATABASE_URL here
          JWT_SECRET: ${{ secrets.JWT_SECRET }} # Set your JWT_SECRET here

      - name: Start frontend
        run: yarn run dev &
        working-directory: ./frontend

      # Install 'wait-on' to wait for both backend and frontend to be available
      - name: Install wait-on
        run: npm install -g wait-on

      # Wait for both backend (assuming localhost:3000) and frontend (localhost:3001) to be available
      - name: Wait for backend and frontend to be ready
        run: wait-on http://localhost:3000 http://localhost:5173

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
